{"version":3,"sources":["store/session.js","components/auth/LoginForm.js","components/auth/SignUpForm.js","components/auth/ProtectedRoute.js","components/UsersList.js","components/User.js","context/Modal.js","components/channels/Channels.js","Discord-Logo-White.svg","components/FriendList.js","components/servers/ServerInfo.js","components/servers/Server.js","store/server.js","components/servers/AddServer.js","components/channels/AddChannel.js","components/channels/ChannelSettings.js","components/servers/ServerSettings.js","components/servers/JoinServer.js","components/ProfileSettings.js","components/servers/Sidebar.js","components/chat/ChatPage.js","components/splashpage/SplashPage.js","components/chat/ChatChannel.js","store/user.js","components/Placeholder.js","components/chat/ChatBot.js","App.js","store/index.js","index.js"],"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","authenticate","dispatch","a","fetch","headers","response","ok","json","data","errors","login","email","password","method","body","JSON","stringify","status","logout","signUp","username","LoginForm","useState","setErrors","setEmail","setPassword","useSelector","state","session","useDispatch","onLogin","e","preventDefault","handleDemo","to","className","onSubmit","map","error","ind","htmlFor","name","placeholder","value","required","onChange","target","onClick","href","SignUpForm","useHistory","setUsername","repeatPassword","setRepeatPassword","onSignUp","maxLength","ProtectedRoute","props","children","UsersList","users","setUsers","useEffect","responseData","fetchData","userComponents","id","User","userId","useParams","ModalContext","React","createContext","ModalProvider","modalRef","useRef","setValue","current","Provider","ref","Modal","onClose","modalNode","useContext","ReactDOM","createPortal","SettingsModal","Channels","FriendList","history","sessionUser","showChat","push","ServerInfo","setShowModal","setChannelSettingsModal","setShowServerSettingsModal","showProfileSettings","serverId","useLocation","pathname","split","server","servers","content","home","channels","user_id","channel","changeChannel","channel_name","server_name","Avatar","src","DefaultAvatar","Server","setShowAddModal","setShowJoinModal","joinedServers","Object","values","serverSet","Set","add","filter","has","shortened","word","join","GET_SERVERS","CREATE_SERVER","DELETE_SERVER","create","createServer","serverName","adminId","form","FormData","append","createChannel","channelName","updateServer","updateChannel","channelId","joinServer","AddServer","setServerName","handleSubmit","length","idx","AddChannel","setChannelName","ChannelSettings","url","updateChannelName","deleteChannel","ServerSettings","updateServerName","Successful","deleteServer","JoinServer","allServers","serversSet","delete","joinAServer","ProfileSettings","Sidebar","socket","showCreateServerModal","setShowCreateServerModal","showCreateChannelModal","setShowCreateChannelModal","showChannelSettingsModal","setShowChannelSettingsModal","showServerSettingsModal","showJoinServerModal","setShowJoinServerModal","showProfileModal","setShowProfileModal","Chat","chatInput","setChatInput","messages","setMessages","friendId","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","empty","friend","io","on","forEach","message","chat","disconnect","emit","created_at","sender","recipient","SplashPage","handleLogin","window","location","GET_USERS","ChatChannel","members","member","Placeholder","ChatBot","console","log","App","enhancer","loaded","setLoaded","path","exact","rootReducer","combineReducers","action","newState","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c73df4.chunk.js","sourcesContent":["// constants\nconst SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n})\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n  \n    dispatch(setUser(data));\n  }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  \n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch('/api/auth/logout', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\n\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { user: action.payload }\n    case REMOVE_USER:\n      return { user: null }\n    default:\n      return state;\n  }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\n\nconst LoginForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleDemo = async (e) => {\n    e.preventDefault();\n\n    const data = await dispatch(login(\"demo@aa.io\", \"password\"));\n    if (data) {\n      setErrors(data);\n    }\n\n  }\n\n  if (user) {\n    return <Redirect to='/channels/@me' />;\n  }\n\n  return (\n    <div className='login-signup-background'>\n    <div className='login-signup-form-container'>\n      <div className='login-signup-header'>\n          <h3>Welcome Back!</h3>\n          <div>We're glad to see you again</div>\n        </div>\n    <form className='login-signup-form' onSubmit={onLogin}>\n        {errors.map((error, ind) => (\n          <div className='errors'>\n          <div key={ind}>{error}</div>\n          </div>\n        ))}\n      <div className='login-signup-form-input'>\n        <label htmlFor='email'>Email</label>\n        <input\n          name='email'\n          type='text'\n          placeholder='Email'\n          value={email}\n          required\n          onChange={updateEmail}\n        />\n      </div>\n      <div className='login-signup-form-input'>\n        <label htmlFor='password'>Password</label>\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          required\n          value={password}\n          onChange={updatePassword}\n        />\n        </div>\n        <button className='login-button' type='submit'>Login</button>\n        <button className='login-button' type=\"button\" onClick={handleDemo}>Demo User</button>\n      <div className='link-signup'>\n          <span>Need an Account? <a href='/sign-up'> Register</a></span>\n      </div>\n    </form>\n    </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { signUp } from '../../store/session';\n\nconst SignUpForm = () => {\n  const history = useHistory()\n  const [errors, setErrors] = useState([]);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n    if (password === repeatPassword) {\n      const data = await dispatch(signUp(username, email, password));\n      if (data) {\n        setErrors(data)\n      }\n      else {\n        <Redirect to='/channels/@me' />\n      }\n    }\n    else {\n      setErrors(['* Passwords must match'])\n    }\n  };\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const updateRepeatPassword = (e) => {\n    setRepeatPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/channels/@me' />;\n  }\n\n  return (\n    <div className='login-signup-background'>\n    <div className='login-signup-form-container'>\n      <div className='login-signup-header'>\n        <h2>Create an Account</h2>\n      </div>\n    <form className='login-signup-form' onSubmit={onSignUp}>\n    {errors.map((error, ind) => (\n          <div className='errors'>\n          <div key={ind}>{error}</div>\n          </div>\n        ))}\n        <div className='login-signup-form-input'>\n        <label>User Name</label>\n        <input\n          type='text'\n          name='username'\n          onChange={updateUsername}\n          maxLength=\"25\"\n          required\n          value={username}\n        ></input>\n      </div>\n      <div className='login-signup-form-input'>\n        <label>Email</label>\n        <input\n          type='text'\n          name='email'\n          maxLength=\"25\"\n          onChange={updateEmail}\n          value={email}\n          required\n        ></input>\n      </div>\n      <div className='login-signup-form-input'>\n        <label>Password</label>\n        <input\n          type='password'\n          name='password'\n          maxLength=\"25\"\n          onChange={updatePassword}\n          value={password}\n          required\n        ></input>\n      </div>\n      <div className='login-signup-form-input'>\n        <label>Repeat Password</label>\n        <input\n          type='password'\n          name='repeat_password'\n          maxLength=\"25\"\n          onChange={updateRepeatPassword}\n          value={repeatPassword}\n          required={true}\n        ></input>\n      </div>\n      <button className='login-button' type='submit'>Sign Up</button>\n      <div className='link-signup'>\n          <span><a href='/login'>Already have an Account?</a></span>\n      </div>\n    </form>\n    </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = props => {\n  const user = useSelector(state => state.session.user)\n  return (\n    <Route {...props}>\n      {(user)? props.children  : <Redirect to='/login' />}\n    </Route>\n  )\n};\n\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction UsersList() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('/api/users/');\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, []);\n\n  const userComponents = users.map((user) => {\n    return (\n      <li key={user.id}>\n        <NavLink to={`/users/${user.id}`}>{user.username}</NavLink>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <h1>User List: </h1>\n      <ul>{userComponents}</ul>\n    </>\n  );\n}\n\nexport default UsersList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction User() {\n  const [user, setUser] = useState({});\n  const { userId }  = useParams();\n\n  useEffect(() => {\n    if (!userId) {\n      return;\n    }\n    (async () => {\n      const response = await fetch(`/api/users/${userId}`);\n      const user = await response.json();\n      setUser(user);\n    })();\n  }, [userId]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <ul>\n      <li>\n        <strong>User Id</strong> {userId}\n      </li>\n      <li>\n        <strong>Username</strong> {user.username}\n      </li>\n      <li>\n        <strong>Email</strong> {user.email}\n      </li>\n    </ul>\n  );\n}\nexport default User;\n","import React, { useContext, useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n// const ChannelSetting = React.createContext();\n\nexport function ModalProvider({ children }) {\n    const modalRef = useRef();\n    const [value, setValue] = useState();\n\n    useEffect(() => {\n        setValue(modalRef.current);\n    }, [])\n\n    return (\n        <>\n            <ModalContext.Provider value={value}>\n                {children}\n            </ModalContext.Provider>\n            <div className='provider' ref={modalRef} />\n        </>\n    );\n}\n\nexport function Modal({ onClose, children }) {\n    const modalNode = useContext(ModalContext);\n    if (!modalNode) return null;\n\n    return ReactDOM.createPortal(\n        <div id=\"modal\">\n            <div id=\"modal-background\" onClick={onClose} />\n            <div id=\"modal-content\">\n                {children}\n        </div>\n        </div>,\n        modalNode\n    );\n}\n\nexport function SettingsModal({onClose, children}) {\n    const modalNode = useContext(ModalContext);\n    if (!modalNode) return null;\n\n    return ReactDOM.createPortal(\n        <div id=\"modal\">\n            <div id=\"settings-background\" >\n            <div id=\"setting-model-child\">\n                {children}\n        </div>\n        </div>\n        </div>,\n        modalNode\n    );\n}\n","import React from 'react'\n\nfunction Channels() {\n  return (\n    <div className=\"channel\">\n        <h4><span className=\"hash\">#</span>Channel</h4>\n    </div>\n  )\n}\n\nexport default Channels\n","export default __webpack_public_path__ + \"static/media/Discord-Logo-White.d12f1262.svg\";","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport AddIcon from '@material-ui/icons/Add'\nimport { Link , useHistory} from 'react-router-dom'\n\n\nfunction FriendList() {\n    const users = useSelector(state => state.users?.users)\n    const history = useHistory();\n    const sessionUser = useSelector(state => state.session.user)\n\n    if (!users) return null\n\n    const showChat = (id) => {\n      history.push(`/channels/@me/${id}`)\n    }\n\n\n  return (\n    <div className=\"sidebar-channel-block\">\n    <div className='sidebar-channel-header'>                \n    <div className='channel-header'>\n        {/* <ExpandMoreIcon /> */}\n    </div>\n\n    </div>\n    <div className='sidebar-channels'>\n    <div className=\"friend-list\" onClick={() => showChat(\"bot\")}>\n        <div className='friend-icon'>\n        <span><i className=\"fa-brands fa-discord\"></i></span>\n        </div>\n        <h4>chatbot</h4>\n    </div>\n     {users?.map(user => {\n      if (user.id == 6 || user.id == sessionUser.id) return null\n       return (\n        <div className=\"friend-list\" onClick={() => showChat(user.id)}>\n        <div className='friend-icon'>\n        <span><i className=\"fa-brands fa-discord\"></i></span>\n        </div>\n        <h4>{user.username}</h4>\n    </div>\n          \n        )\n     })}   \n\n\n\n   </div>\n   </div>\n  )\n}\n\nexport default FriendList\n","import React from 'react'\nimport Channels from '../channels/Channels'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport AddIcon from '@material-ui/icons/Add'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport {Avatar} from '@material-ui/core'\nimport DefaultAvatar from '../../Discord-Logo-White.svg'\nimport '../../display.css'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { useParams, useLocation, useHistory } from 'react-router-dom'\nimport FriendList from '../FriendList'\n\n\nfunction ServerInfo({setShowModal, setChannelSettingsModal, setShowServerSettingsModal, showProfileSettings}) {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const url = useLocation().pathname\n    const serverId = url.split(\"/\")[2]\n    const sessionUser = useSelector(state => state.session.user)\n    const server = useSelector(state => state.servers[serverId])\n    let content = null\n    let home = serverId === '@me' || false\n\n    const changeChannel = (channel) => {\n        history.push(`/channels/${serverId}/${channel.id}`)\n        \n    }\n    \n    \n    const channels = server?.channels\n\n    if (home) content =  (<FriendList />)\n    else content =  (\n        <div className=\"sidebar-channel-block\">\n        <div className='sidebar-channel-header'>                \n        <div className='channel-header'>\n            {/* <ExpandMoreIcon /> */}\n        <h4>TEXT CHANNELS</h4>\n        </div>\n        {server?.user_id === sessionUser?.id && <AddIcon className='sidebar-add-icon' onClick={() => setShowModal()} />}\n\n        </div>\n        <div className='sidebar-channels'>\n            <ul>\n         {channels?.map(channel => {\n            return (\n            <li className=\"channel\"onClick={() => changeChannel(channel)} >\n                <div className=\"channel-name\" >\n            <h4><span className=\"hash\">#</span>{channel?.channel_name} </h4> \n            </div>\n            <div className='channel-settings-icon'>{server?.user_id === sessionUser?.id && <SettingsIcon onClick={() => setChannelSettingsModal()} />}</div>\n        </li>\n            )\n         })} \n         </ul>  \n\n\n       </div>\n       </div>\n    )\n    \n    \n\n  return (\n    <div className=\"sidebar\">\n        <div className='sidebar-top'>\n            <h3>{server?.server_name || \"DIRECT MESSAGES\" }</h3>\n\n            {home || (server?.user_id === sessionUser?.id && <SettingsIcon  onClick={() => setShowServerSettingsModal() }  />)}\n        </div>\n\n        \n            {content}\n\n        \n\n        <div className='sidebar-profile'>\n                <Avatar src={DefaultAvatar} />\n                <div className='sidebar-profile-info'>\n                    <h4>{sessionUser?.username}</h4>\n                    <p>#13594</p>\n                    </div>\n\n                    <div>\n                        <SettingsIcon onClick={() => showProfileSettings()} />\n                    </div>\n               </div>\n\n    </div>\n  )\n}\n\nexport default ServerInfo\n","import { Link } from 'react-router-dom'\nimport React, {useState} from 'react'\nimport {useDispatch, useSelector } from 'react-redux'\n\n\nfunction Server({setShowAddModal, setShowJoinModal}) {\n  const dispatch = useDispatch()\n  const sessionUser = useSelector(state => state.session.user)\n  let joinedServers = Object.values(useSelector(state => state.session.user.servers))\n  const servers = Object.values(useSelector(state => state.servers))\n  let serverSet = new Set()\n  joinedServers.map(server => serverSet.add(server.id))\n  joinedServers = servers.filter(server => server.user_id === sessionUser.id || serverSet.has(server.id))\n\n\n\n\n\n\n  const addNewServer = () => {\n    setShowAddModal()\n  }\n\n  const joinServer = () => {\n    setShowJoinModal()\n  }\n\n  if (!servers) return null\n\n\n  return (\n      <div className=\"server-container\">\n        <div className='server-nav-container'>\n        <div className='server-button'>\n          <Link to='/channels/@me'>\n        <span><i className=\"fa-brands fa-discord\"></i></span>\n        </Link>\n        </div>\n        <div className='bottom-border'></div>\n        {joinedServers?.map((server) => {\n          const shortened = server.server_name.split(' ').map(word => word[0]).join(\"\")\n          return (\n            <Link to={`/channels/${server.id}/${server?.channels[0].id}`} server={server} className=\"no-decor\">\n          <div className='server-button'>{shortened}</div>\n          </Link>\n          )\n        })}\n          <div className='bottom-border'></div>\n          <div className='server-button' onClick={addNewServer}><i className=\"fa-solid fa-plus\"></i></div>\n          <div className='server-button' onClick={joinServer}><i className=\"fa-solid fa-compass\"></i></div>\n        </div>\n        </div>\n  )\n}\n\nexport default Server\n","const GET_SERVERS = 'server/GET_SERVERS'\nconst CURRENT_SERVER = 'server/CURRENT_SERVER'\nconst CREATE_SERVER = 'server/CREATE_SERVER'\nconst DELETE_SERVER = 'server/DELETE_SERVER'\nconst UPDATE_SERVER = 'server/UPDATE_SERVER'\n\n\nconst retrieveAction = (servers) => ({\n  type: GET_SERVERS,\n  servers\n});\n\nconst current = (server) => ({\n  type: CURRENT_SERVER,\n  server\n})\n\nconst create = (server) => ({\n  type: CREATE_SERVER,\n  server\n})\n\nconst deleteAction = (id) => ({\n  type: DELETE_SERVER, \n  id\n})\n\n\n\n\n\nexport const getAllServers = () => async (dispatch) => {\n  const response = await fetch('/api/servers');\n\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n\n    dispatch(retrieveAction(data));\n  }\n}\n\n\nexport const createServer = (payload) => async (dispatch) => {\n\n  const {\n    serverName,\n    adminId\n  } = payload\n  \n  const form = new FormData();\n  form.append('server_name', serverName)\n  form.append('admin_id', adminId)\n\n\n  const response = await fetch('/api/servers', {\n    method: \"POST\",\n    body: form\n  });\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(create(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\n\nexport const deleteServer = (serverId) => async (dispatch) => {\n  const response = await fetch(`/api/servers/${serverId}`,{ \n    method: \"DELETE\"\n})\n\nif (response.ok) {\n  const data = await response.json()\n  if(data.errors){\n    return;\n  }\n  if(data.Successful) dispatch(deleteAction(serverId))\n\n  else return data\n}\n}\n\n\nexport const createChannel = (payload) => async (dispatch) => {\n  const {\n    channelName,\n    serverId\n  } = payload \n\n  const form = new FormData()\n  form.append('channel_name', channelName)\n  form.append('server_id', serverId)\n\n  const response = await fetch(`/api/servers/${serverId}/channels`, {\n    method: \"POST\",\n    body: form\n  })\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(create(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\n\nexport const updateServer = (payload) => async dispatch => {\n  const {\n    serverName,\n    adminId, \n    serverId\n  } = payload\n  \n  const form = new FormData();\n  form.append('server_name', serverName)\n  form.append('user_id', adminId)\n\n\n  const response = await fetch(`/api/servers/${serverId}`, {\n    method: \"PUT\",\n    body: form\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(create(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\n\nexport const updateChannel = (payload) => async (dispatch) => {\n  const {\n    channelName,\n    channelId,\n    serverId\n  } = payload \n\n  const form = new FormData()\n  form.append('channel_name', channelName)\n  form.append('server_id', serverId)\n  form.append('id', channelId)\n\n\n  const response = await fetch(`/api/servers/${serverId}/channels`, {\n    method: \"PUT\",\n    body: form\n  })\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(create(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n  }\n\n\n\nexport const deleteChannel = (channelId) => async (dispatch) => {\n  const response = await fetch(`/api/channels/${channelId}`,{ \n    method: \"DELETE\",\n})\n\nif (response.ok) {\n  const data = await response.json();\n  dispatch(create(data))\n  return null;\n} else if (response.status < 500) {\n  const data = await response.json();\n  if (data.errors) {\n    return data.errors;\n  }\n} else {\n  return ['An error occurred. Please try again.']\n}\n\n}\n\n\nexport const joinServer = (userId, serverId) => async (dispatch) => {\n\n  const form = new FormData()\n  form.append('user_id', userId)\n\n  const response = await fetch(`/api/servers/${serverId}/join`, {\n    method: \"POST\",\n    body: form\n\n  })\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(create(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n    \n  }\n\n\n\n\n\nexport default function serverReducer(state = {}, action) {\n    switch (action.type) {\n      case GET_SERVERS:\n        const servers = action.servers\n        return {...state, ...servers}\n      case CREATE_SERVER:\n        return {...state, [action.server.id]: action.server}\n      case DELETE_SERVER:\n        let newState = {...state}\n        delete newState[action.id]\n        return newState\n      default:\n        return state;\n    }\n\n  }\n","import React, {useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux'\nimport {createServer} from '../../store/server'\n\n\nfunction AddServer({onClose}) {\n    const history = useHistory();\n    const [serverName, setServerName] = useState(\"\");\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState([]);\n    const sessionUser = useSelector(state => state.session.user)\n    \n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        let payload = {\n            serverName, \n            adminId: sessionUser.id\n        }\n    \n        let data = await dispatch(createServer(payload))\n        if (data) {\n          setErrors(data)\n        }\n        else {\n          onClose()\n        }\n    }\n\n    const handleCancel = () => {\n      onClose()\n    }\n\n  return (\n    <div className='create-block'>\n      <header className='create-channel'>Create Server</header>\n        <form className='create-form' onSubmit={handleSubmit}>\n        {errors.length > 0 && <ul className='errors'>\n          {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        </ul>}\n        <input\n        type=\"text\"\n        placeholder=\"Server Name\"\n        required\n        maxLength=\"25\"\n        className='input'\n        value={serverName}\n        onChange={(e) => setServerName(e.target.value)} />\n        <div className='cancel-submit'>\n          <button type='button' className='button' onClick={handleCancel}>Cancel</button>\n        <button className='button' type=\"submit\">Create Server</button>\n        </div>\n        </form>\n    </div>\n  )\n}\n\nexport default AddServer\n","import React, {useState} from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux'\nimport {createChannel} from '../../store/server'\n\n\n\nfunction AddChannel({onClose}) {\n    const history = useHistory();\n    const [channelName, setChannelName] = useState(\"\");\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState([]);\n    const url = useLocation().pathname\n    const serverId = url.split(\"/\")[2]\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n  \n\n        let payload = {\n            channelName, \n            serverId \n        }\n    \n        let data = await dispatch(createChannel(payload))\n        if (data) {\n          setErrors(data)\n        }\n        else {\n          onClose()\n        }\n    }\n\n    const handleCancel = () => {\n      onClose()\n    }\n\n  return (\n    <div className='create-block'>\n      <header className='create-channel'>Create Text Channel</header>\n        <form className='create-form' onSubmit={handleSubmit}>\n        {errors.length > 0 && <ul className='errors'>\n          {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        </ul>}\n        <input\n        type=\"text\"\n        placeholder=\"Channel Name\"\n        required\n        maxLength=\"25\"\n        className='input'\n        value={channelName}\n        onChange={(e) => setChannelName(e.target.value)} />\n        <div className='cancel-submit'>\n          <button type='button' className='button' onClick={handleCancel}>Cancel</button>\n          <button className='button' type=\"submit\">Add Channel</button>\n\n        </div>\n        </form>\n    </div>\n  )\n}\n\nexport default AddChannel\n","import React, {useState} from 'react'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { updateChannel, deleteChannel } from '../../store/server'\n\nfunction ChannelSettings({onClose}) {\n  const url = useLocation().pathname\n  const history = useHistory()\n  const [errors, setErrors] = useState([]);\n  const dispatch = useDispatch();\n  const channelId = url.split(\"/\")[3]\n  const serverId = url.split(\"/\")[2]\n  const server = useSelector(state => state.servers[serverId])\n  const sessionUser = useSelector(state => state.session.user)\n  const channel = server?.channels.filter(channel => channel.id == channelId)[0]\n  const [channelName, setChannelName] = useState(channel?.channel_name);\n\n  const handleDelete = () => {\n    const data = dispatch(deleteChannel(channelId))\n    onClose()\n  }\n\n  const updateChannelName = async () => {\n\n    if(channelName == \"\") {\n      setErrors(['Channel Name is required']) \n      return\n    }\n\n    \n    let payload = {\n      channelName, \n      channelId,\n      serverId\n  }\n\n\n  let data = await dispatch(updateChannel(payload))\n  if (data) {\n    setErrors(data)\n  } else {\n   onClose()\n  }\n\n  }\n\n  return (\n    <div className='channel-settings'>\n      <div className='close-channel'>\n      <span onClick={() => onClose()}><i className=\"fa-solid fa-x \"></i></span>\n      </div>\n      <div className='channel-settings-nav'>\n      <h4><span className=\"hash\">#</span>{channel?.channel_name} </h4> \n      <div className=''>Overview</div>\n      <div className='settings-bottom-border'></div>\n      <div onClick={handleDelete} className='settings-delete'>Delete Channel <i className=\"fa-solid fa-trash\"></i></div>\n      </div>\n        <div className='channel-settings-edit'>\n          <h3>OVERVIEW</h3>\n          <form className='channel-update' onSubmit={updateChannelName}>\n          {errors.length > 0 && <ul className='errors'>\n          {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        </ul>}\n            <label>CHANNEL NAME</label>\n            <input\n             type='text'\n             className='input'\n             required\n             maxLength=\"25\"\n             value={channelName}\n             onChange={(e) => setChannelName(e.target.value)} /> \n             <button className='button'>Edit Name</button>\n          </form>\n        </div>\n    </div>\n  )\n}\n\nexport default ChannelSettings\n","import React, {useState} from 'react'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport {deleteServer, updateServer} from '../../store/server'\n\nfunction ServerSettings({onClose}) {\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n  const dispatch = useDispatch();\n  const url = useLocation().pathname\n  const serverId = url.split(\"/\")[2]\n  const sessionUser = useSelector(state => state.session.user)\n  const server = useSelector(state => state.servers[serverId])\n  const [serverName, setServerName] = useState(server?.server_name);\n\n\n  const handleDelete = () => {\n    const data = dispatch(deleteServer(serverId))\n    onClose()\n    history.push(`/channels/@me`)\n  }\n\n  const updateServerName = async () => {\n\n    let payload = {\n      serverName, \n      adminId: sessionUser.id, \n      serverId\n  }\n\n\n  let data = await dispatch(updateServer(payload))\n  if (data) {\n    setErrors(data)\n  } else {\n    onClose()\n  }\n\n  }\n\n  return (\n    <div className='channel-settings'>\n      <div className='close-channel'>\n      <span onClick={() => onClose()}><i className=\"fa-solid fa-x \"></i></span>\n      </div>\n      <div className='channel-settings-nav'>\n      <h4><span className=\"hash\">#</span>{server?.server_name} </h4> \n      <div className=''>Overview</div>\n      <div className='settings-bottom-border'></div>\n      <div onClick={handleDelete} className='settings-delete'>Delete Server <i className=\"fa-solid fa-trash\"></i></div>\n      </div>\n        <div className='channel-settings-edit'>\n          <h3>OVERVIEW</h3>\n          <form className='channel-update' onSubmit={updateServerName}>\n            <label>SERVER NAME</label>\n            <input\n             type='text'\n             className='input'\n             required\n             maxLength=\"25\"\n             value={serverName}\n             onChange={(e) => setServerName(e.target.value)} /> \n             <button className='button'>Edit Name</button>\n          </form>\n        </div>\n    </div>\n  )\n}\n\nexport default ServerSettings\n","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {joinServer} from '../../store/server'\nimport { authenticate } from '../../store/session'\n\nfunction JoinServer({onClose}) {\n  const dispatch = useDispatch()\n  const allServers = Object.values(useSelector(state => state.servers))\n  const sessionUser = useSelector(state => state.session.user)\n  let serversSet = new Set();\n  allServers.map(server => {serversSet.add(server.id)})\n  sessionUser.servers.map(server => serversSet.delete(server.id))\n  let servers = allServers.filter(server => serversSet.has(server.id) && server.user_id !== sessionUser.id)\n\n  \n\n\n\n  const joinAServer = async (server) => {\n\n    await dispatch(joinServer(sessionUser?.id, server?.id))\n    await dispatch(authenticate())\n    onClose()\n  }\n    \n\n  return (\n    <div className='create-block'>\n    <header className='create-channel'>Join Server</header>\n    <div className='join-server-button'>\n        {servers.map(server => {\n            return (\n                <button key={server.id} className='button' onClick={() => joinAServer(server)}>{server?.server_name}</button>\n            )\n        })}\n        </div>\n  </div>\n  )\n}\n\nexport default JoinServer\n","import React, {useState} from 'react'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport {deleteServer, updateServer} from '../store/server'\nimport {logout} from '../store/session'\nimport {Avatar} from '@material-ui/core'\nimport DefaultAvatar from '../Discord-Logo-White.svg'\n\nfunction ProfileSettings({onClose}) {\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user)\n\n\n  const handleLogout = () => {\n    dispatch(logout())\n    history.push('/')\n  }\n\n\n\n  return (\n    <div className='channel-settings'>\n      <div className='close-channel'>\n      <span onClick={() => onClose()}><i className=\"fa-solid fa-x \"></i></span>\n      </div>\n      <div className='channel-settings-nav'>\n      \n      <div className=''>User Settings</div>\n      <div className='settings-bottom-border'></div>\n      <div onClick={handleLogout} className='settings-delete'>Log Out <i className=\"fa-solid fa-trash\"></i></div>\n      </div>\n        <div className='channel-settings-edit'>\n          <h3>My Account</h3>\n          <div className='user-brief-info'>\n            <div className='user-background'></div>\n            <div className='user-icon-name'>\n            <div><Avatar src={DefaultAvatar} /></div>\n            <div>{sessionUser?.username}#0004</div>\n            </div>\n            <div className='user-information'>\n            <div>\n                <div className='info-field'>USERNAME<div>{sessionUser?.username}</div></div>\n                <div className='info-field'>EMAIL<div>{sessionUser?.email}</div></div>\n            </div>\n          </div>\n          </div>\n\n        </div>\n    </div>\n  )\n}\n\nexport default ProfileSettings\n","import React, {useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Modal, SettingsModal } from '../../context/Modal'\nimport ServerInfo from './ServerInfo'\nimport Server from './Server'\nimport AddServer from './AddServer'\nimport AddChannel from '../channels/AddChannel'\nimport ChannelSettings from '../channels/ChannelSettings'\nimport ServerSettings from './ServerSettings'\nimport JoinServer from './JoinServer'\nimport ProfileSettings from '../ProfileSettings'\n\n\nfunction Sidebar() {\n    // const {serverId} = useParams()\n    // //const current = useSelector(state => state.servers)[\"current\"]\n    // const sessionUser = useSelector(state => state.session.user)\n    // const server = useSelector(state => state.servers[1])\n    \n    // const channels = server?.channels  \n\n    const [showCreateServerModal, setShowCreateServerModal] = useState(false);\n    const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n    const [showChannelSettingsModal, setShowChannelSettingsModal] = useState(false);\n    const [showServerSettingsModal, setShowServerSettingsModal] = useState(false);\n    const [showJoinServerModal, setShowJoinServerModal] = useState(false);\n    const [showProfileModal, setShowProfileModal] = useState(false);\n\n\n\n\n  return (\n    <>\n    <Server setShowAddModal={() => setShowCreateServerModal(true)} setShowJoinModal={() => setShowJoinServerModal(true)}/>\n    <ServerInfo setShowModal={() => setShowCreateChannelModal(true)} setChannelSettingsModal={() => setShowChannelSettingsModal(true)} setShowServerSettingsModal={() => setShowServerSettingsModal(true)} showProfileSettings={() => setShowProfileModal(true)} />\n    {showCreateServerModal && (\n      <Modal onClose={() => setShowCreateServerModal(false)}>\n          <AddServer onClose={() => setShowCreateServerModal(false)}/>\n      </Modal>\n  )}\n    {showCreateChannelModal && (\n      <Modal onClose={() => setShowCreateChannelModal(false)}>\n          <AddChannel onClose={() => setShowCreateChannelModal(false)}  />\n      </Modal>\n  )}\n    {showChannelSettingsModal && (\n      <SettingsModal onClose={() => setShowChannelSettingsModal(false)}>\n          <ChannelSettings  onClose={() => setShowChannelSettingsModal(false)}/>\n      </SettingsModal>\n  )}\n\n{showServerSettingsModal && (\n      <SettingsModal onClose={() => setShowServerSettingsModal(false)}>\n          <ServerSettings  onClose={() => setShowServerSettingsModal(false)}/>\n      </SettingsModal>\n  )}\n  {showJoinServerModal && (\n      <Modal onClose={() => setShowJoinServerModal(false)}>\n          <JoinServer onClose={() => setShowJoinServerModal(false)}/> \n      </Modal>\n  )}\n\n  {showProfileModal && (\n    <SettingsModal onClose={() => setShowProfileModal(false)}>\n    <ProfileSettings  onClose={() => setShowProfileModal(false)}/>\n</SettingsModal>\n  )\n\n  }\n    </>\n  )\n}\n\nexport default Sidebar\n","import React, {useEffect, useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport DefaultAvatar from '../../Discord-Logo-White.svg'\nimport {Avatar} from '@material-ui/core'\nimport {io } from 'socket.io-client'\n\nlet socket;\n\nfunction Chat() {\n  const [chatInput, setChatInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const url = useLocation().pathname\n  const friendId = url.split(\"/\")[3]\n  const users = useSelector(state => state.users.users)\n  const sessionUser = useSelector(state => state.session.user)\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  const yyyy = today.getFullYear();\n  let empty = true;\n\n  today = mm + '/' + dd + '/' + yyyy;\n\n  const friend = users?.filter(user => user.id == friendId)[0]\n\n  useEffect(() => {\n    // open socket connection\n    // create websocket\n    socket = io();\n\n    socket.on(\"show_dm_msgs\", (data) => {\n      data.messages.forEach(message => setMessages((messages => [...messages, message])))\n      \n      //setMessages(messages => [...messages, ])\n    })\n\n    socket.on(\"chat\", (chat) => {\n        setMessages(messages => [...messages, chat])\n    })\n    \n    // when component unmounts, disconnect\n    return (() => {\n        socket.disconnect()\n    })\n}, [])\n\n\n  useEffect(() => {\n      setMessages([])\n      socket.emit(\"get_dm_msgs\", {user: sessionUser?.id, username: sessionUser?.username, friend: friend?.id,  })\n  }, [friend])\n\n  let content = (\n            <ul className='messages'>  \n              \n          </ul>\n  )\n\n\n\nconst sendChat = (e) => {\n  e.preventDefault()\n  // emit a message\n  socket.emit(\"chat\", { sender: sessionUser.id, username: sessionUser.username, recipient: friend.id,  message: chatInput });\n  // clear the input field after the message is sent\n  setChatInput(\"\")\n  // window.location.reload(false);\n}\n\nif (messages.length > 0) empty = false\n\n\n\n\n  \n\n\n  return (\n    <div className='message-container'>\n      <header className='chat-header'><span className='hash'>@</span>{friend?.username}</header>\n      <div className='message-content'>\n        <div className='view-messages-container'>\n        <ul className='messages'>  \n        {!empty ? \n            messages.map((message, ind) => (\n                  <li className='message-item' key={ind}>\n                    <Avatar src={DefaultAvatar} className=\"message-icon\" />\n                    <div className='message-content'>\n                      <div className='message-sender'>{message.username} <span className=\"created_at\"> {message.created_at || today}</span></div>\n                      <div className=\"message-text\">{message.message}</div>\n                      </div>\n                  </li>)) :\n        <li className='message-item'>\n        <div className='message-content'>\n          <div className='message-sender'>Looks empty in here</div>\n          <div className=\"message-text\">Type something in the chat to start this conversation</div>\n          </div>\n      </li> \n    }\n    </ul>\n        <div className='send-message-container'>\n              <form className='message-form' onSubmit={sendChat}>\n                <input \n                type='text' \n                className='message-input'\n                maxLength=\"100\"\n                required\n                placeholder={`@${friend?.username}`} \n                value={chatInput} \n                onChange={(e) => setChatInput(e.target.value)} />\n              </form>\n          </div>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n","import React from 'react'\n\nfunction SplashPage() {\n\n  const handleLogin = () => {\n    window.location.href = '/login'\n  }\n\n  return (\n    <div className=\"splash-page\">\n        <div className='splash-container'>\n          <div className='splash-nav-container'>\n            <nav className='splash-nav'>\n              <div className='logo-name'><span><i className=\"fa-brands fa-discord\"></i></span>dicords</div>\n              <ul className='links'>\n                <li><a href='https://github.com/keimjm/dicords' className='no-decor-nav'>Github</a></li>\n                <li><a href='https://www.linkedin.com/in/joshua-keim-5237a1167/' className='no-decor-nav'>LinkedIn</a></li>\n                <li><a href='https://www.linkedin.com/in/joshua-keim-5237a1167/' className='no-decor-nav'>About</a></li>\n              </ul>\n              <button className='btn-login' onClick={handleLogin}>Login</button>\n            </nav>\n          </div>\n          <div className='splash-content'>\n            <div className='splash-body-header'>\n              <h1>Imagine a Place....</h1>\n            </div>\n            <div className='splash-body'>\n            ...where you can belong to a school club, a gaming group, or a worldwide art community. Where just you and a handful of friends can spend time together. A place that makes it easy to talk every day and hang out more often.\n            </div>\n            <button className='open-button' onClick={handleLogin}>Open Dicords</button>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default SplashPage\n","import React, {useEffect, useState} from 'react'\nimport {useLocation, useHistory} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport DefaultAvatar from '../../Discord-Logo-White.svg'\nimport {Avatar} from '@material-ui/core'\nimport {io } from 'socket.io-client'\n\nlet socket;\n\nfunction ChatChannel() {\n  const [chatInput, setChatInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const users = useSelector(state => state.users.users)\n  const sessionUser = useSelector(state => state.session.user)\n  const url = useLocation().pathname\n  const history = useHistory()\n  const dispatch = useDispatch();\n  const channelId = url.split(\"/\")[3]\n  const serverId = url.split(\"/\")[2]\n  const server = useSelector(state => state.servers[serverId])\n  const channel = server?.channels.filter(channel => channel.id == channelId)[0]\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  const yyyy = today.getFullYear();\n  let empty = true\n\n  today = mm + '/' + dd + '/' + yyyy;\n\n\n  \n\n  useEffect(() => {\n    // open socket connection\n    // create websocket\n    socket = io();\n\n    socket.on(\"show_channel_msgs\", (data) => {\n      data.messages.forEach(message => setMessages((messages => [...messages, message])))\n      //setMessages(messages => [...messages, ])\n    })\n\n    socket.on(\"channel_chat\", (chat) => {\n        setMessages(messages => [...messages, chat])\n    })\n    // when component unmounts, disconnect\n    return (() => {\n        socket.disconnect()\n    })\n}, [])\n\n\n  useEffect(() => {\n      setMessages([])\n      socket.emit(\"get_channel_msgs\", {sender: sessionUser?.id, username: sessionUser?.username, channel: channel?.id })\n  }, [channel])\n\n\n\nconst sendChat = (e) => {\n  e.preventDefault()\n  // emit a message\n  socket.emit(\"channel_chat\", { sender: sessionUser.id, username: sessionUser.username, channel: channel?.id,  message: chatInput });\n  // clear the input field after the message is sent\n  setChatInput(\"\")\n}\n\n\nif (messages.length > 0) empty = false\n\n  \n\n\n  return (\n    <>\n    <div className='message-container'>\n      <header className='chat-header'><span className='hash'>#</span>{channel?.channel_name}</header>\n      <div className='message-content'>\n        <div className='view-messages-container'>\n          <ul className='messages'>\n        {!empty ? \n            messages.map((message, ind) => (\n                  <li className='message-item' key={ind}>\n                    <Avatar src={DefaultAvatar} className=\"message-icon\" />\n                    <div className='message-content'>\n                      <div className='message-sender'>{message.username} <span className=\"created_at\"> {message.created_at || today}</span></div>\n                      <div className=\"message-text\">{message.message}</div>\n                      </div>\n                  </li>)) :\n        <li className='message-item'>\n        <div className='message-content'>\n          <div className='message-sender'>Looks empty in here</div>\n          <div className=\"message-text\">Type something in the chat to start this conversation</div>\n          </div>\n      </li> \n    }\n</ul>\n        <div className='send-message-container'>\n              <form className='message-form' onSubmit={sendChat}>\n                <input \n                type='text' \n                className='message-input' \n                placeholder='say something' \n                maxLength=\"100\"\n                required\n                value={chatInput} \n                onChange={(e) => setChatInput(e.target.value)} />\n              </form>\n          </div>\n      </div>\n      </div>\n    </div>\n    <div className='members-container'>\n      <div className='member-header'>MEMBERS - {server?.members?.length}</div>\n      <ul className='member-list'>\n      {server?.members.map(member => {\n        return (\n            <div className='member'><Avatar src={DefaultAvatar} className=\"message-icon\" /> {member.username}</div>\n        )\n      })}\n      </ul>\n    </div>\n\n    </>\n  )\n}\n\nexport default ChatChannel\n","const GET_USERS = 'server/GET_USERS'\n\n\nconst retrieveAction = (users) => ({\n  type: GET_USERS,\n  users\n});\n\n\nexport const getAllUsers = () => async (dispatch) => {\n  const response = await fetch('/api/users');\n\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n\n    dispatch(retrieveAction(data));\n  }\n}\n\n\n\n\nexport default function userReducer(state = {}, action) {\n    switch (action.type) {\n      case GET_USERS:\n        const users = action.users\n        return {...state, ...users}\n      default:\n        return state;\n    }\n\n  }\n","import React from 'react'\n\nfunction Placeholder() {\n  return (\n    <div className='placeholder-container'>\n        <div className='placeholder-content'>\n            <h1>Welcome to dicords</h1>\n            <p>Click on a Server on the left to start chatting. Or choose to dm another user. If you want to start something yourself click the plus button to create a new server.</p>\n        </div>\n    </div>\n  )\n}\n\nexport default Placeholder\n","import React, {useEffect, useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport DefaultAvatar from '../../Discord-Logo-White.svg'\nimport {Avatar} from '@material-ui/core'\nimport {io } from 'socket.io-client'\n\nlet socket;\n\nfunction ChatBot() {\n  const [chatInput, setChatInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const sessionUser = useSelector(state => state.session.user)\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  const yyyy = today.getFullYear();\n  let empty = true;\n\n  today = mm + '/' + dd + '/' + yyyy;\n\n  useEffect(() => {\n    // open socket connection\n    // create websocket\n    socket = io();\n\n    socket.on(\"bot_response\", (data) => {\n        console.log(data)\n        setMessages(messages => [...messages, data.message])\n    })\n\n    socket.on(\"chat\", (chat) => {\n        setMessages(messages => [...messages, chat])\n    })\n    \n    // when component unmounts, disconnect\n    return (() => {\n        socket.disconnect()\n    })\n}, [])\n\nconst sendChat = (e) => {\n  e.preventDefault()\n  // emit a message\n  socket.emit(\"chat\", { sender: sessionUser.id, username: sessionUser.username, recipient: 6,  message: chatInput });\n  socket.emit(\"chatbot\", {  message: chatInput, sender: 6, username: \"chatbot\", recipient: 1,  });\n  // clear the input field after the message is sent\n  setChatInput(\"\")\n}\n\nif (messages.length > 0) empty = false\n\n\n\n\n  \n\n\n  return (\n    <div className='message-container'>\n      <header className='chat-header'><span className='hash'>@</span>chatbot</header>\n      <div className='message-content'>\n        <div className='view-messages-container'>\n        <ul className='messages'>  \n        {!empty ? \n            messages.map((message, ind) => (\n                  <li className='message-item' key={ind}>\n                    <Avatar src={DefaultAvatar} className=\"message-icon\" />\n                    <div className='message-content'>\n                      <div className='message-sender'>{message.username} <span className=\"created_at\"> {message.created_at || today}</span></div>\n                      <div className=\"message-text\">{message.message}</div>\n                      </div>\n                  </li>)) :\n        <li className='message-item'>\n        <div className='message-content'>\n          <div className='message-sender'>Looks empty in here</div>\n          <div className=\"message-text\">Type something in the chat to start this conversation</div>\n          </div>\n      </li> \n    }\n    </ul>\n        <div className='send-message-container'>\n              <form className='message-form' onSubmit={sendChat}>\n                <input \n                type='text' \n                className='message-input'\n                maxLength=\"100\"\n                required\n                placeholder='@chatbot'\n                value={chatInput} \n                onChange={(e) => setChatInput(e.target.value)} />\n              </form>\n          </div>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatBot\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from './components/auth/LoginForm';\nimport SignUpForm from './components/auth/SignUpForm';\nimport NavBar from './components/NavBar';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport UsersList from './components/UsersList';\nimport User from './components/User';\nimport { authenticate } from './store/session';\nimport DirectMessage from './components/DirectMessage';\nimport HomePage from './components/HomePage';\nimport { getAllServers } from './store/server';\nimport SplashPage from './components/splashpage/SplashPage';\nimport { getAllUsers } from './store/user';\nimport Server from './components/servers/Server';\nimport Sidebar from './components/servers/Sidebar';\nimport FriendList from './components/FriendList'\nimport { Modal } from './context/Modal';\nimport Chat from './components/chat/ChatPage';\nimport ChatChannel from './components/chat/ChatChannel';\nimport NotFound from './components/NotFound'\nimport Placeholder from './components/Placeholder';\nimport ChatBot from './components/chat/ChatBot';\n\nfunction App() {\n  const [loaded, setLoaded] = useState(false);\n  const [channelModalIsOpen, setChannelModalIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const servers = useSelector(state => state.servers)\n  const users = useSelector(state => state.users)\n\n  useEffect(() => {\n    (async() => {\n      await dispatch(authenticate());\n      setLoaded(true);\n    })();\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getAllServers());\n    dispatch(getAllUsers())\n  }, [dispatch]);\n\n  if (!loaded || !servers) {\n    return null;\n  }\n\n  if (!users) return null\n\n  return (\n    <div className=\"app\">\n    <BrowserRouter>\n      {/* <NavBar /> */}\n      <Route path='/' exact={true} >\n          <SplashPage/>\n        </Route>\n\n\n      <ProtectedRoute path='/channels/' >\n          <Sidebar/>\n        </ProtectedRoute>\n        <Switch>\n        <ProtectedRoute exact path='/channels/@me' >\n          <Placeholder />\n        </ProtectedRoute>\n\n        </Switch>\n\n      <Switch>\n        <Route path='/login' exact={true}>\n          <LoginForm />\n        </Route>\n        <Route path='/sign-up' exact={true}>\n          <SignUpForm />\n        </Route>\n        <ProtectedRoute exact={true} path='/channels/@me/bot' >\n          <ChatBot/>\n        </ProtectedRoute>\n        <ProtectedRoute exact={true} path='/channels/@me/:messageId' >\n          <Chat/>\n        </ProtectedRoute>\n        <ProtectedRoute exact={true}  path='/channels/:serverId/:channelId' >\n          <ChatChannel />\n        </ProtectedRoute>\n\n        <ProtectedRoute path='/users' exact={true} >\n          <UsersList/>\n        </ProtectedRoute>\n        <ProtectedRoute path='/users/:userId' exact={true} >\n          <User />\n        </ProtectedRoute>\n\n\n      </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport serverReducer from './server';\nimport session from './session'\nimport userReducer from './user';\n\nconst rootReducer = combineReducers({\n  session,\n  servers: serverReducer, \n  users: userReducer\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport { ModalProvider } from './context/Modal';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ModalProvider>\n        <App />\n      </ModalProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}